(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{443:function(t,e,r){"use strict";r.r(e);var a=r(29),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"樹-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#樹-tree"}},[t._v("#")]),t._v(" 樹(tree)")]),t._v(" "),r("p",[t._v("非循序資料結構、一種分層資料的抽象模型")]),t._v(" "),r("p",[t._v("必須要有根節點以及零至多個子節點")]),t._v(" "),r("p",[t._v("子樹: 子節點與它的後代組成")]),t._v(" "),r("p",[t._v("內部節點: 至少有一個子節點")]),t._v(" "),r("p",[t._v("外部節點(又稱葉節點): 沒有子節點")]),t._v(" "),r("p",[t._v("節點的深度是看祖先節點的數量，而樹的深度是節點深度的最大值")]),t._v(" "),r("h2",{attrs:{id:"二元搜尋樹-binarysearchtree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二元搜尋樹-binarysearchtree"}},[t._v("#")]),t._v(" 二元搜尋樹(BinarySearchTree)")]),t._v(" "),r("p",[t._v("二元樹: 允許樹的子節點最多只能 2 個 (二元搜尋樹是二元樹的一種)")]),t._v(" "),r("p",[t._v("二元搜尋樹左邊節點的值必須 < 父節點的值，而右邊節點的值必須 >= 父節點")])])}),[],!1,null,null,null);e.default=s.exports}}]);